# Synths

dull_bell:
  help: |-
    A simple dull discordant bell sound.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
pretty_bell:
  help: |-
    A pretty bell sound. Works well with short attacks and long decays.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
beep:
  help: |-
    A simple pure sine wave. The sine wave is the simplest, purest sound there is and is the fundamental building block of all noise. The mathematician Fourier demonstrated that any sound could be built out of a number of sine waves (the more complex the sound, the more sine waves needed). Have a play combining a number of sine waves to design your own sounds!
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
sine:
  help: |-
    A simple pure sine wave. The sine wave is the simplest, purest sound there is and is the fundamental building block of all noise. The mathematician Fourier demonstrated that any sound could be built out of a number of sine waves (the more complex the sound, the more sine waves needed). Have a play combining a number of sine waves to design your own sounds!
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
saw:
  help: |-
    A saw wave with a low pass filter. Great for using with FX such as the built in low pass filter (available via the cutoff arg) due to the complexity and thickness of the sound.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
pulse:
  help: |-
    A simple pulse wave with a low pass filter. This defaults to a square wave, but the timbre can be changed dramatically by adjusting the pulse_width arg between 0 and 1. The pulse wave is thick and heavy with lower notes and is a great ingredient for bass sounds.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    pulse_width:
      help: |-
        The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
subpulse:
  help: |-
    A pulse wave with a sub sine wave passed through a low pass filter. The pulse wave is thick and heavy with lower notes and is a great ingredient for bass sounds - especially with the sub wave.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    pulse_width:
      help: |-
        The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
    sub_amp:
      help: |-
        Amplitude for the additional sine wave.
      default: 1
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    sub_detune:
      help: |-
        Amount of detune from the note for the additional sine wave. Default is -12
      default: -12
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
square:
  help: |-
    A simple square wave with a low pass filter. The square wave is thick and heavy with lower notes and is a great ingredient for bass sounds. If you wish to modulate the width of the square wave see the synth pulse.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
tri:
  help: |-
    A simple triangle wave with a low pass filter.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    pulse_width:
      help: |-
        The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
dsaw:
  help: |-
    A pair of detuned saw waves passed through a low pass filter. Two saw waves with slightly different frequencies generates a nice thick sound which is the basis for a lot of famous synth sounds. Thicken the sound by increasing the detune value, or create an octave-playing synth by choosing a detune of 12 (12 MIDI notes is an octave).
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    detune:
      help: |-
        Distance (in MIDI notes) between components of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound. Larger values such as 0.5 make the tuning sound strange. Even bigger values such as 5 create chord-like sounds.
      default: 0.1
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
dpulse:
  help: |-
    A pair of detuned pulse waves passed through a low pass filter. Two pulse waves with slightly different frequencies generates a nice thick sound which can be used as a basis for some nice bass sounds. Thicken the sound by increasing the detune value, or create an octave-playing synth by choosing a detune of 12 (12 MIDI notes is an octave). Each pulse wave can also have individual widths (although the default is for the detuned pulse to mirror the width of the main pulse).
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    detune:
      help: |-
        Distance (in MIDI notes) between components of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound. Larger values such as 0.5 make the tuning sound strange. Even bigger values such as 5 create chord-like sounds.
      default: 0.1
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    pulse_width:
      help: |-
        The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
    dpulse_width:
      help: |-
        The width of the second detuned pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.
      default: pulse_width
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
dtri:
  help: |-
    A pair of detuned triangle waves passed through a low pass filter. Two pulse waves with slightly different frequencies generates a nice thick sound which can be used as a basis for some nice bass sounds. Thicken the sound by increasing the detune value, or create an octave-playing synth by choosing a detune of 12 (12 MIDI notes is an octave).
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    detune:
      help: |-
        Distance (in MIDI notes) between components of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound. Larger values such as 0.5 make the tuning sound strange. Even bigger values such as 5 create chord-like sounds.
      default: 0.1
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
fm:
  help: |-
    A sine wave with a fundamental frequency which is modulated at audio rate by another sine wave with a specific modulation, division and depth. Useful for generating a wide range of sounds by playing with the divisor and depth params. Great for deep powerful bass and crazy 70s sci-fi sounds.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    divisor:
      help: |-
        Modifies the frequency of the modulator oscillator relative to the carrier. Don't worry too much about what this means - just try different numbers out!
      default: 2
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    depth:
      help: |-
        Modifies the depth of the carrier wave used to modify fundamental frequency. Don't worry too much about what this means - just try different numbers out!
      default: 1
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
mod_fm:
  help: |-
    The FM synth modulating between two notes - the duration of the modulation can be modified using the mod_phase arg, the range (number of notes jumped between) by the mod_range arg and the width of the jumps by the mod_width param. The FM synth is a sine wave with a fundamental frequency which is modulated at audio rate by another sine wave with a specific modulation, division and depth. Useful for generating a wide range of sounds by playing with the `:divisor` and `:depth` params. Great for deep powerful bass and crazy 70s sci-fi sounds.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    divisor:
      help: |-
        Modifies the frequency of the modulator oscillator relative to the carrier. Don't worry too much about what this means - just try different numbers out!
      default: 2
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    depth:
      help: |-
        Modifies the depth of the carrier wave used to modify fundamental frequency. Don't worry too much about what this means - just try different numbers out!
      default: 1
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase:
      help: |-
        Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.
      default: 0.25
      constraints: |-
        must be greater than zero
        May be changed whilst playing
        Scaled with current BPM value
    mod_range:
      help: |-
        The size of gap between modulation notes. A gap of 12 is one octave.
      default: 5
      constraints: |-
        none
        May be changed whilst playing
    mod_pulse_width:
      help: |-
        The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
    mod_phase_offset:
      help: |-
        Initial modulation phase offset (a value between 0 and 1).
      default: 0
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    mod_invert_wave:
      help: |-
        Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    mod_wave:
      help: |-
        Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.
      default: 1
      constraints: |-
        must be one of the following values: [0, 1, 2, 3]
        May be changed whilst playing
mod_saw:
  help: |-
    A saw wave passed through a low pass filter which modulates between two separate notes via a variety of control waves.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase:
      help: |-
        Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.
      default: 0.25
      constraints: |-
        must be greater than zero
        May be changed whilst playing
        Scaled with current BPM value
        Has slide options for shaping changes
    mod_range:
      help: |-
        The size of gap between modulation notes. A gap of 12 is one octave.
      default: 5
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    mod_pulse_width:
      help: |-
        The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase_offset:
      help: |-
        Initial modulation phase offset (a value between 0 and 1).
      default: 0
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    mod_invert_wave:
      help: |-
        Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    mod_wave:
      help: |-
        Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.
      default: 1
      constraints: |-
        must be one of the following values: [0, 1, 2, 3]
        May be changed whilst playing
mod_dsaw:
  help: |-
    A pair of detuned saw waves (see the dsaw synth) which are modulated between two fixed notes at a given rate.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase:
      help: |-
        Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.
      default: 0.25
      constraints: |-
        must be greater than zero
        May be changed whilst playing
        Scaled with current BPM value
        Has slide options for shaping changes
    mod_range:
      help: |-
        The size of gap between modulation notes. A gap of 12 is one octave.
      default: 5
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    mod_pulse_width:
      help: |-
        The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase_offset:
      help: |-
        Initial modulation phase offset (a value between 0 and 1).
      default: 0
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    mod_invert_wave:
      help: |-
        Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    mod_wave:
      help: |-
        Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.
      default: 1
      constraints: |-
        must be one of the following values: [0, 1, 2, 3]
        May be changed whilst playing
    detune:
      help: |-
        Distance (in MIDI notes) between components of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound. Larger values such as 0.5 make the tuning sound strange. Even bigger values such as 5 create chord-like sounds.
      default: 0.1
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
mod_sine:
  help: |-
    A sine wave passed through a low pass filter which modulates between two separate notes via a variety of control waves.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase:
      help: |-
        Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.
      default: 0.25
      constraints: |-
        must be greater than zero
        May be changed whilst playing
        Scaled with current BPM value
        Has slide options for shaping changes
    mod_range:
      help: |-
        The size of gap between modulation notes. A gap of 12 is one octave.
      default: 5
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    mod_pulse_width:
      help: |-
        The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase_offset:
      help: |-
        Initial modulation phase offset (a value between 0 and 1).
      default: 0
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    mod_invert_wave:
      help: |-
        Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    mod_wave:
      help: |-
        Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.
      default: 1
      constraints: |-
        must be one of the following values: [0, 1, 2, 3]
        May be changed whilst playing
mod_beep:
  help: |-
    A sine wave passed through a low pass filter which modulates between two separate notes via a variety of control waves.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase:
      help: |-
        Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.
      default: 0.25
      constraints: |-
        must be greater than zero
        May be changed whilst playing
        Scaled with current BPM value
        Has slide options for shaping changes
    mod_range:
      help: |-
        The size of gap between modulation notes. A gap of 12 is one octave.
      default: 5
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    mod_pulse_width:
      help: |-
        The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase_offset:
      help: |-
        Initial modulation phase offset (a value between 0 and 1).
      default: 0
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    mod_invert_wave:
      help: |-
        Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    mod_wave:
      help: |-
        Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.
      default: 1
      constraints: |-
        must be one of the following values: [0, 1, 2, 3]
        May be changed whilst playing
mod_tri:
  help: |-
    A triangle wave passed through a low pass filter which modulates between two separate notes via a variety of control waves.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase:
      help: |-
        Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.
      default: 0.25
      constraints: |-
        must be greater than zero
        May be changed whilst playing
        Scaled with current BPM value
        Has slide options for shaping changes
    mod_range:
      help: |-
        The size of gap between modulation notes. A gap of 12 is one octave.
      default: 5
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    mod_pulse_width:
      help: |-
        The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase_offset:
      help: |-
        Initial modulation phase offset (a value between 0 and 1).
      default: 0
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    mod_invert_wave:
      help: |-
        Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    mod_wave:
      help: |-
        Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.
      default: 1
      constraints: |-
        must be one of the following values: [0, 1, 2, 3]
        May be changed whilst playing
mod_pulse:
  help: |-
    A pulse wave with a low pass filter modulating between two notes via a variety of control waves (see mod_wave: arg). The pulse wave defaults to a square wave, but the timbre can be changed dramatically by adjusting the pulse_width arg between 0 and 1.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase:
      help: |-
        Phase duration in beats of oscillations between the two notes. Time it takes to switch between the notes.
      default: 0.25
      constraints: |-
        must be greater than zero
        May be changed whilst playing
        Scaled with current BPM value
        Has slide options for shaping changes
    mod_range:
      help: |-
        The size of gap between modulation notes. A gap of 12 is one octave.
      default: 5
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    mod_pulse_width:
      help: |-
        The width of the modulated pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Only valid if mod wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
    mod_phase_offset:
      help: |-
        Initial modulation phase offset (a value between 0 and 1).
      default: 0
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    mod_invert_wave:
      help: |-
        Invert mod waveform (i.e. flip it on the y axis). 0=normal wave, 1=inverted wave.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    mod_wave:
      help: |-
        Wave shape of mod wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.
      default: 1
      constraints: |-
        must be one of the following values: [0, 1, 2, 3]
        May be changed whilst playing
    pulse_width:
      help: |-
        The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
chiplead:
  help: |-
    A slightly clipped square (pulse) wave with phases of 12.5%, 25% or 50% modelled after the 2A03 chip found in voices 1 and 2 of the NES games console. This can be used for retro sounding leads and harmonised lines. This also adds an opt 'note_resolution' which locks the note slide to certain pitches which are multiples of the step size. This allows for emulation of the sweep setting on the 2A03.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 60
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    note_resolution:
      help: |-
        Locks down the note resolution to be multiples of this (MIDI) number. For example, a `note_resolution:` of 1 will only allow semitones to be played. When used in conjunction with `note_slide:` produces a staircase of notes rather than a continuous line which is how things were on the NES. Set to 0 to disable. This wasn't a feature of this triangle (bass) channel on the original chip but some emulators have added it in since.
      default: 0.1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    width:
      help: |-
        Which of the three pulse_widths to use - 0 => 12.5%, 1 => 25%, 2 => 50%
      default: 0
      constraints: |-
        must be one of the following values: [0, 1, 2]
        May be changed whilst playing
chipbass:
  help: |-
    A 16 step triangle wave modelled after the 2A03 chip found in voice 3 of the NES games console. This can be used for retro sounding basslines. For complete authenticity with the 2A03 bear in mind that the triangle channel on that chip didn't have a volume control.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 60
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    note_resolution:
      help: |-
        Locks down the note resolution to be multiples of this (MIDI) number. For example, a `note_resolution:` of 1 will only allow semitones to be played. When used in conjunction with `note_slide:` produces a staircase of notes rather than a continuous line which is how things were on the NES. Set to 0 to disable. This wasn't a feature of this triangle (bass) channel on the original chip but some emulators have added it in since.
      default: 0.1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
tb303:
  help: |-
    Emulation of the classic Roland TB-303 Bass Line synthesiser. Overdrive the res (i.e. use very large values) for that classic late 80s acid sound.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        The maximum cutoff value as a MIDI note
      default: 120
      constraints: |-
        must be a value less than or equal to 130
        May be changed whilst playing
        Has slide options for shaping changes
    cutoff_min:
      help: |-
        The minimum cutoff value.
      default: 30
      constraints: |-
        must be a value less than or equal to 130
        May be changed whilst playing
        Has slide options for shaping changes
    cutoff_attack:
      help: |-
        Attack time for cutoff filter. Amount of time (in beats) for sound to reach full cutoff value. Default value is set to match amp envelope's attack value.
      default: attack
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    cutoff_decay:
      help: |-
        Decay time for cutoff filter. Amount of time (in beats) for sound to move from full cutoff value (cutoff attack level) to the cutoff sustain level. Default value is set to match amp envelope's decay value.
      default: decay
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    cutoff_sustain:
      help: |-
        Amount of time for cutoff value to remain at sustain level in beats. Default value is set to match amp envelope's sustain value.
      default: sustain
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    cutoff_release:
      help: |-
        Amount of time (in beats) for sound to move from cutoff sustain value to cutoff min value. Default value is set to match amp envelope's release value.
      default: release
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    cutoff_attack_level:
      help: |-
        The peak cutoff (value of cutoff at peak of attack) as a value between 0 and 1 where 0 is the :cutoff_min and 1 is the :cutoff value
      default: 1
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    cutoff_decay_level:
      help: |-
        The level of cutoff after the decay phase as a value between 0 and 1 where 0 is the :cutoff_min and 1 is the :cutoff value
      default: cutoff_sustain_level
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    cutoff_sustain_level:
      help: |-
        The sustain cutoff (value of cutoff at sustain time) as a value between 0 and 1 where 0 is the :cutoff_min and 1 is the :cutoff value.
      default: 1
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0.9
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
    wave:
      help: |-
        Wave type - 0 saw, 1 pulse, 2 triangle. Different waves will produce different sounds.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1, 2]
        May be changed whilst playing
    pulse_width:
      help: |-
        The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
supersaw:
  help: |-
    Thick swirly saw waves sparkling and moving about to create a rich trancy sound.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 130
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0.7
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
hoover:
  help: |-
    Classic early 90's rave synth - 'a sort of slurry chorussy synth line like the classic Dominator by Human Resource'. Based on Dan Stowell's implementation in SuperCollider and Daniel Turczanski's port to Overtone. Works really well with portamento (see docs for the 'control' method).
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0.05
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 130
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0.1
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
prophet:
  help: |-
    Dark and swirly, this synth uses Pulse Width Modulation (PWM) to create a timbre which continually moves around. This effect is created using the pulse ugen which produces a variable width square wave. We then control the width of the pulses using a variety of LFOs - sin-osc and lf-tri in this case. We use a number of these LFO modulated pulse ugens with varying LFO type and rate (and phase in some cases) to provide the LFO with a different starting point. We then mix all these pulses together to create a thick sound and then feed it through a resonant low pass filter (rlpf). For extra bass, one of the pulses is an octave lower (half the frequency) and its LFO has a little bit of randomisation thrown into its frequency component for that extra bit of variety.
    Synth design adapted from:
    The Prophet Speaks (page 2)
    Steal This Sound,  Mitchell Sigman
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 110
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0.7
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
zawa:
  help: |-
    Saw wave with oscillating timbre. Produces moving saw waves with a unique character controllable with the control oscillator (usage similar to mod synths).
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0.9
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
    phase:
      help: |-
        Phase duration in beats of timbre modulation.
      default: 1
      constraints: |-
        must be greater than zero
        May be changed whilst playing
        Scaled with current BPM value
        Has slide options for shaping changes
    phase_offset:
      help: |-
        Initial phase offset of the sync wave (a value between 0 and 1).
      default: 0
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    wave:
      help: |-
        Wave shape controlling freq sync saw wave. 0=saw wave, 1=pulse, 2=triangle wave and 3=sine wave.
      default: 3
      constraints: |-
        must be one of the following values: [0, 1, 2, 3]
        May be changed whilst playing
    invert_wave:
      help: |-
        Invert sync freq control waveform (i.e. flip it on the y axis). 0=uninverted wave, 1=inverted wave.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    range:
      help: |-
        Range of the associated sync saw in MIDI notes from the main note. Modifies timbre.
      default: 24
      constraints: |-
        must be a value between 0 and 90 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    disable_wave:
      help: |-
        Enable and disable sync control wave (setting to 1 will stop timbre movement).
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    pulse_width:
      help: |-
        The width of the pulse wave as a value between 0 and 1. A width of 0.5 will produce a square wave. Different values will change the timbre of the sound. Only valid if wave is type pulse.
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 exclusively
        May be changed whilst playing
        Has slide options for shaping changes
dark_ambience:
  help: |-
    A slow rolling bass with a sparkle of light trying to escape the darkness. Great for an ambient sound.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 110
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0.7
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
    detune1:
      help: |-
        Distance (in MIDI notes) between the main note and the second component of sound. Affects thickness, sense of tuning and harmony.
      default: 12
      constraints: |-
        none
        Can not be changed once set
        Has slide options for shaping changes
    detune2:
      help: |-
        Distance (in MIDI notes) between the main note and the third component of sound. Affects thickness, sense of tuning and harmony. Tiny values such as 0.1 create a thick sound.
      default: 24
      constraints: |-
        none
        Can not be changed once set
        Has slide options for shaping changes
    noise:
      help: |-
        Noise source. Has a subtle effect on the timbre of the sound. 0=pink noise (the default), 1=brown noise, 2=white noise, 3=clip noise and 4=grey noise
      default: 0
      constraints: |-
        must be one of the following values: [0, 1, 2, 3, 4]
        May be changed whilst playing
    ring:
      help: |-
        Amount of ring in the sound. Lower values create a more rough sound, higher values produce a sound with more focus.
      default: 0.2
      constraints: |-
        must be a value between 0.1 and 50 inclusively
        May be changed whilst playing
    room:
      help: |-
        Room size in squared metres used to calculate the reverb.
      default: 70
      constraints: |-
        must be a value greater than or equal to 0.1,must be a value less than or equal to 300
        Can not be changed once set
    reverb_time:
      help: |-
        How long in beats the reverb should go on for.
      default: 100
      constraints: |-
        must be zero or greater
        Can not be changed once set
growl:
  help: |-
    A deep rumbling growl with a bright sine shining through at higher notes.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0.1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 130
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0.7
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
hollow:
  help: |-
    A hollow breathy sound constructed from random noise
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 90
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Only functional if a cutoff value is specified. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0.99
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
    noise:
      help: |-
        Noise source. Has a subtle effect on the timbre of the sound. 0=pink noise, 1=brown noise (the default), 2=white noise, 3=clip noise and 4=grey noise
      default: 1
      constraints: |-
        must be one of the following values: [0, 1, 2, 3, 4]
        May be changed whilst playing
    norm:
      help: |-
        Normalise the audio (make quieter parts of the synth's sound louder and louder parts quieter) - this is similar to the normaliser FX. This may emphasise any clicks caused by clipping.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
mono_player:
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pre_amp:
      help: |-
        Amplitude multiplier which takes place immediately before any internal FX such as the low pass filter, compressor or pitch modification. Use this opt if you want to overload the compressor.
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Duration of the attack phase of the envelope.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay:
      help: |-
        Duration of the decay phase of the envelope.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain:
      help: |-
        Duration of the sustain phase of the envelope. When -1 (the default) will auto-stretch.
      default: -1
      constraints: |-
        must either be a positive value or -1
        Can not be changed once set
    release:
      help: |-
        Duration of the release phase of the envelope.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
    lpf:
      help: |-
        Low pass filter cutoff value. A MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: -1
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    lpf_attack:
      help: |-
        Attack time for low pass filter envelope. Amount of time (in beats) for sound to reach attack_level value. This envelope is bypassed if no lpf env opts are specified.  Default value is set to match amp envelope's attack value.
      default: attack
      constraints: |-
        must be zero or greater
        Can not be changed once set
    lpf_decay:
      help: |-
        Decay time for low pass filter envelope. Amount of time (in beats) for sound to move from `lpf_attack_level:` to the `lpf_sustain_level:`. This envelope is bypassed if no lpf env opts are specified.  Default value is set to match amp envelope's decay value.
      default: decay
      constraints: |-
        must be zero or greater
        Can not be changed once set
    lpf_sustain:
      help: |-
        Amount of time for low pass filter envelope value to remain at sustain level in beats. This envelope is bypassed if no lpf env opts are specified.  When -1 (the default) will auto-stretch.
      default: sustain
      constraints: |-
        must either be a positive value or -1
        Can not be changed once set
    lpf_release:
      help: |-
        Amount of time (in beats) for sound to move from `lpf_sustain_level:` to `lpf_release_level:`. This envelope is bypassed if no lpf env opts are specified. 
      default: release
      constraints: |-
        must be zero or greater
        Can not be changed once set
    lpf_init_level:
      help: |-
        The initial low pass filter envelope value as a MIDI note. This envelope is bypassed if no lpf env opts are specified. Default value is to match the `lpf_min:` opt.
      default: lpf_min
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    lpf_attack_level:
      help: |-
        The peak low pass filter envelope value after the attack phase as a MIDI note. This envelope is bypassed if no lpf env opts are specified. Default value is match the `lpf_decay_level:` opt.
      default: lpf_decay_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    lpf_decay_level:
      help: |-
        The level of the low pass filter envelope after the decay phase as a MIDI note. This envelope is bypassed if no lpf env opts are specified. Default value is to match the `lpf_sustain_level:` opt.
      default: lpf_sustain_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    lpf_sustain_level:
      help: |-
        The level of the low pass filter envelope after the sustain phase as a MIDI note. This envelope is bypassed if no lpf env opts are specified. Default value is to match the `lpf_release_level:` opt.
      default: lpf_release_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    lpf_release_level:
      help: |-
        The final value of the low pass filter envelope as a MIDI note. This envelope is bypassed if no lpf env opts are specified. Default value is to match the `lpf:` opt.
      default: lpf
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    lpf_env_curve:
      help: |-
        Select the shape of the curve between levels in the cutoff envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    lpf_min:
      help: |-
        The minimum low pass filter value.
      default: 130
      constraints: |-
        must be a value less than or equal to 130
        May be changed whilst playing
        Has slide options for shaping changes
    hpf:
      help: |-
        High pass filter cutoff value. A MIDI note representing the lowest frequencies allowed to be present in the sound. A high value like 100 makes the sound thin and whispy, a low value like 40 removes just the lower bass components of the sound.
      default: -1
      constraints: |-
        must be zero or greater,must be a value less than 119
        May be changed whilst playing
        Has slide options for shaping changes
    hpf_attack:
      help: |-
        Attack time for hpf cutoff filter. Amount of time (in beats) for sound to reach full hpf cutoff value. Default value is set to match amp envelope's attack value.
      default: attack
      constraints: |-
        must be zero or greater
        Can not be changed once set
    hpf_sustain:
      help: |-
        Amount of time for hpf cutoff value to remain at hpf sustain level in beats. When -1 (the default) will auto-stretch.
      default: sustain
      constraints: |-
        must either be a positive value or -1
        Can not be changed once set
    hpf_decay:
      help: |-
        Decay time for hpf cutoff filter. Amount of time (in beats) for sound to move from full hpf cutoff value (cutoff attack level) to the hpf cutoff sustain level. Default value is set to match amp envelope's decay value.
      default: decay
      constraints: |-
        must be zero or greater
        Can not be changed once set
    hpf_release:
      help: |-
        Amount of time (in beats) for sound to move from hpf cutoff sustain value to hpf cutoff min value. Default value is set to match amp envelope's release value.
      default: release
      constraints: |-
        must be zero or greater
        Can not be changed once set
    hpf_init_level:
      help: |-
        The initial high pass filter envelope value as a MIDI note. This envelope is bypassed if no hpf env opts are specified. Default value is set to 130
      default: 130
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    hpf_attack_level:
      help: |-
        The peak hpf cutoff (value of hpf cutoff at peak of attack) as a MIDI note.
      default: hpf_decay_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    hpf_decay_level:
      help: |-
        The level of hpf cutoff after the decay phase as a MIDI note.
      default: hpf_sustain_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    hpf_sustain_level:
      help: |-
        The sustain hpf cutoff (value of hpf cutoff at sustain time) as a MIDI note.
      default: hpf_release_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    hpf_release_level:
      help: |-
        The sustain hpf cutoff (value of hpf cutoff at sustain time) as a MIDI note.
      default: hpf
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    hpf_env_curve:
      help: |-
        Select the shape of the curve between levels in the hpf cutoff envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    hpf_max:
      help: |-
        The maximum high pass filter value.
      default: 200
      constraints: |-
        must be a value less than or equal to 130
        May be changed whilst playing
        Has slide options for shaping changes
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    rate:
      help: |-
        Rate with which to play back - default is 1. Playing the sample at rate 2 will play it back at double the normal speed. This will have the effect of doubling the frequencies in the sample and halving the playback time. Use rates lower than 1 to slow the sample down. Negative rates will play the sample in reverse.
      default: 1
      constraints: |-
        must not be zero
        Can not be changed once set
    start:
      help: |-
        A fraction (between 0 and 1) representing where in the sample to start playback. 1 represents the end of the sample, 0.5 half-way through etc.
      default: 0
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    finish:
      help: |-
        A fraction (between 0 and 1) representing where in the sample to finish playback. 1 represents the end of the sample, 0.5 half-way through etc.
      default: 1
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    norm:
      help: |-
        Normalise the audio (make quieter parts of the sample louder and louder parts quieter) - this is similar to the normaliser FX. This may emphasise any clicks caused by clipping.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    pitch:
      help: |-
        Pitch adjustment in semitones. 1 is up a semitone, 12 is up an octave, -12 is down an octave etc. Maximum upper limit of 24 (up 2 octaves). Lower limit of -72 (down 6 octaves). Decimal numbers can be used for fine tuning.
      default: 0
      constraints: |-
        must be a value greater than or equal to -72,must be a value less than or equal to 24
        May be changed whilst playing
        Has slide options for shaping changes
    window_size:
      help: |-
        Pitch shift works by chopping the input into tiny slices, then playing these slices at a higher or lower rate. If we make the slices small enough and overlap them, it sounds like the original sound with the pitch changed.
        The window_size is the length of the slices and is measured in seconds. It needs to be around 0.2 (200ms) or greater for pitched sounds like guitar or bass, and needs to be around 0.02 (20ms) or lower for percussive sounds like drum loops. You can experiment with this to get the best sound for your input.
      default: 0.2
      constraints: |-
        must be a value greater than 5.0e-05
        May be changed whilst playing
        Has slide options for shaping changes
    pitch_dis:
      help: |-
        Pitch dispersion - how much random variation in pitch to add. Using a low value like 0.001 can help to "soften up" the metallic sounds, especially on drum loops. To be really technical, pitch_dispersion is the maximum random deviation of the pitch from the pitch ratio (which is set by the pitch param)
      default: 0.0
      constraints: |-
        must be a value greater than or equal to 0
        May be changed whilst playing
        Has slide options for shaping changes
    time_dis:
      help: |-
        Time dispersion - how much random delay before playing each grain (measured in seconds). Again, low values here like 0.001 can help to soften up metallic sounds introduced by the effect. Large values are also fun as they can make soundscapes and textures from the input, although you will most likely lose the rhythm of the original. NB - This won't have an effect if it's larger than window_size.
      default: 0.0
      constraints: |-
        must be a value greater than or equal to 0
        May be changed whilst playing
        Has slide options for shaping changes
    compress:
      help: |-
        Enable the compressor. This sits at the end of the internal FX chain immediately before the `amp:` opt. Therefore to drive the compressor use the `pre_amp:` opt which will amplify the signal before it hits any internal FX. The compressor compresses the dynamic range of the incoming signal. Equivalent to automatically turning the amp down when the signal gets too loud and then back up again when it's quiet. Useful for ensuring the containing signal doesn't overwhelm other aspects of the sound. Also a general purpose hard-knee dynamic range processor which can be tuned via the opts to both expand and compress the signal.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    threshold:
      help: |-
        Threshold value determining the break point between slope_below and slope_above. Only valid if the compressor is enabled by turning on the compress: opt.
      default: 0.2
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    clamp_time:
      help: |-
        Time taken for the amplitude adjustments to kick in fully (in seconds). This is usually pretty small (not much more than 10 milliseconds). Also known as the time of the attack phase. Only valid if the compressor is enabled by turning on the compress: opt.
      default: 0.01
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    slope_above:
      help: |-
        Slope of the amplitude curve above the threshold. A value of 1 means that the output of signals with amplitude above the threshold will be unaffected. Greater values will magnify and smaller values will attenuate the signal. Only valid if the compressor is enabled by turning on the compress: opt.
      default: 0.5
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    slope_below:
      help: |-
        Slope of the amplitude curve below the threshold. A value of 1 means that the output of signals with amplitude below the threshold will be unaffected. Greater values will magnify and smaller values will attenuate the signal. Only valid if the compressor is enabled by turning on the compress: opt.
      default: 1
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    relax_time:
      help: |-
        Time taken for the amplitude adjustments to be released. Usually a little longer than clamp_time. If both times are too short, you can get some (possibly unwanted) artefacts. Also known as the time of the release phase. Only valid if the compressor is enabled by turning on the compress: opt.
      default: 0.01
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
stereo_player:
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pre_amp:
      help: |-
        Amplitude multiplier which takes place immediately before any internal FX such as the low pass filter, compressor or pitch modification. Use this opt if you want to overload the compressor.
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Duration of the attack phase of the envelope.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay:
      help: |-
        Duration of the decay phase of the envelope.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain:
      help: |-
        Duration of the sustain phase of the envelope. When -1 (the default) will auto-stretch.
      default: -1
      constraints: |-
        must either be a positive value or -1
        Can not be changed once set
    release:
      help: |-
        Duration of the release phase of the envelope.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
    lpf:
      help: |-
        Low pass filter cutoff value. A MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: -1
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    lpf_attack:
      help: |-
        Attack time for low pass filter envelope. Amount of time (in beats) for sound to reach attack_level value. This envelope is bypassed if no lpf env opts are specified.  Default value is set to match amp envelope's attack value.
      default: attack
      constraints: |-
        must be zero or greater
        Can not be changed once set
    lpf_decay:
      help: |-
        Decay time for low pass filter envelope. Amount of time (in beats) for sound to move from `lpf_attack_level:` to the `lpf_sustain_level:`. This envelope is bypassed if no lpf env opts are specified.  Default value is set to match amp envelope's decay value.
      default: decay
      constraints: |-
        must be zero or greater
        Can not be changed once set
    lpf_sustain:
      help: |-
        Amount of time for low pass filter envelope value to remain at sustain level in beats. This envelope is bypassed if no lpf env opts are specified.  When -1 (the default) will auto-stretch.
      default: sustain
      constraints: |-
        must either be a positive value or -1
        Can not be changed once set
    lpf_release:
      help: |-
        Amount of time (in beats) for sound to move from `lpf_sustain_level:` to `lpf_release_level:`. This envelope is bypassed if no lpf env opts are specified. 
      default: release
      constraints: |-
        must be zero or greater
        Can not be changed once set
    lpf_init_level:
      help: |-
        The initial low pass filter envelope value as a MIDI note. This envelope is bypassed if no lpf env opts are specified. Default value is to match the `lpf_min:` opt.
      default: lpf_min
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    lpf_attack_level:
      help: |-
        The peak low pass filter envelope value after the attack phase as a MIDI note. This envelope is bypassed if no lpf env opts are specified. Default value is match the `lpf_decay_level:` opt.
      default: lpf_decay_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    lpf_decay_level:
      help: |-
        The level of the low pass filter envelope after the decay phase as a MIDI note. This envelope is bypassed if no lpf env opts are specified. Default value is to match the `lpf_sustain_level:` opt.
      default: lpf_sustain_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    lpf_sustain_level:
      help: |-
        The level of the low pass filter envelope after the sustain phase as a MIDI note. This envelope is bypassed if no lpf env opts are specified. Default value is to match the `lpf_release_level:` opt.
      default: lpf_release_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    lpf_release_level:
      help: |-
        The final value of the low pass filter envelope as a MIDI note. This envelope is bypassed if no lpf env opts are specified. Default value is to match the `lpf:` opt.
      default: lpf
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    lpf_env_curve:
      help: |-
        Select the shape of the curve between levels in the cutoff envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    lpf_min:
      help: |-
        The minimum low pass filter value.
      default: 130
      constraints: |-
        must be a value less than or equal to 130
        May be changed whilst playing
        Has slide options for shaping changes
    hpf:
      help: |-
        High pass filter cutoff value. A MIDI note representing the lowest frequencies allowed to be present in the sound. A high value like 100 makes the sound thin and whispy, a low value like 40 removes just the lower bass components of the sound.
      default: -1
      constraints: |-
        must be zero or greater,must be a value less than 119
        May be changed whilst playing
        Has slide options for shaping changes
    hpf_attack:
      help: |-
        Attack time for hpf cutoff filter. Amount of time (in beats) for sound to reach full hpf cutoff value. Default value is set to match amp envelope's attack value.
      default: attack
      constraints: |-
        must be zero or greater
        Can not be changed once set
    hpf_sustain:
      help: |-
        Amount of time for hpf cutoff value to remain at hpf sustain level in beats. When -1 (the default) will auto-stretch.
      default: sustain
      constraints: |-
        must either be a positive value or -1
        Can not be changed once set
    hpf_decay:
      help: |-
        Decay time for hpf cutoff filter. Amount of time (in beats) for sound to move from full hpf cutoff value (cutoff attack level) to the hpf cutoff sustain level. Default value is set to match amp envelope's decay value.
      default: decay
      constraints: |-
        must be zero or greater
        Can not be changed once set
    hpf_release:
      help: |-
        Amount of time (in beats) for sound to move from hpf cutoff sustain value to hpf cutoff min value. Default value is set to match amp envelope's release value.
      default: release
      constraints: |-
        must be zero or greater
        Can not be changed once set
    hpf_init_level:
      help: |-
        The initial high pass filter envelope value as a MIDI note. This envelope is bypassed if no hpf env opts are specified. Default value is set to 130
      default: 130
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    hpf_attack_level:
      help: |-
        The peak hpf cutoff (value of hpf cutoff at peak of attack) as a MIDI note.
      default: hpf_decay_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    hpf_decay_level:
      help: |-
        The level of hpf cutoff after the decay phase as a MIDI note.
      default: hpf_sustain_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    hpf_sustain_level:
      help: |-
        The sustain hpf cutoff (value of hpf cutoff at sustain time) as a MIDI note.
      default: hpf_release_level
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    hpf_release_level:
      help: |-
        The sustain hpf cutoff (value of hpf cutoff at sustain time) as a MIDI note.
      default: hpf
      constraints: |-
        must be a value between 0 and 130 inclusively
        Can not be changed once set
    hpf_env_curve:
      help: |-
        Select the shape of the curve between levels in the hpf cutoff envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    hpf_max:
      help: |-
        The maximum high pass filter value.
      default: 200
      constraints: |-
        must be a value less than or equal to 130
        May be changed whilst playing
        Has slide options for shaping changes
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    rate:
      help: |-
        Rate with which to play back - default is 1. Playing the sample at rate 2 will play it back at double the normal speed. This will have the effect of doubling the frequencies in the sample and halving the playback time. Use rates lower than 1 to slow the sample down. Negative rates will play the sample in reverse.
      default: 1
      constraints: |-
        must not be zero
        Can not be changed once set
    start:
      help: |-
        A fraction (between 0 and 1) representing where in the sample to start playback. 1 represents the end of the sample, 0.5 half-way through etc.
      default: 0
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    finish:
      help: |-
        A fraction (between 0 and 1) representing where in the sample to finish playback. 1 represents the end of the sample, 0.5 half-way through etc.
      default: 1
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    norm:
      help: |-
        Normalise the audio (make quieter parts of the sample louder and louder parts quieter) - this is similar to the normaliser FX. This may emphasise any clicks caused by clipping.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    pitch:
      help: |-
        Pitch adjustment in semitones. 1 is up a semitone, 12 is up an octave, -12 is down an octave etc. Maximum upper limit of 24 (up 2 octaves). Lower limit of -72 (down 6 octaves). Decimal numbers can be used for fine tuning.
      default: 0
      constraints: |-
        must be a value greater than or equal to -72,must be a value less than or equal to 24
        May be changed whilst playing
        Has slide options for shaping changes
    window_size:
      help: |-
        Pitch shift works by chopping the input into tiny slices, then playing these slices at a higher or lower rate. If we make the slices small enough and overlap them, it sounds like the original sound with the pitch changed.
        The window_size is the length of the slices and is measured in seconds. It needs to be around 0.2 (200ms) or greater for pitched sounds like guitar or bass, and needs to be around 0.02 (20ms) or lower for percussive sounds like drum loops. You can experiment with this to get the best sound for your input.
      default: 0.2
      constraints: |-
        must be a value greater than 5.0e-05
        May be changed whilst playing
        Has slide options for shaping changes
    pitch_dis:
      help: |-
        Pitch dispersion - how much random variation in pitch to add. Using a low value like 0.001 can help to "soften up" the metallic sounds, especially on drum loops. To be really technical, pitch_dispersion is the maximum random deviation of the pitch from the pitch ratio (which is set by the pitch param)
      default: 0.0
      constraints: |-
        must be a value greater than or equal to 0
        May be changed whilst playing
        Has slide options for shaping changes
    time_dis:
      help: |-
        Time dispersion - how much random delay before playing each grain (measured in seconds). Again, low values here like 0.001 can help to soften up metallic sounds introduced by the effect. Large values are also fun as they can make soundscapes and textures from the input, although you will most likely lose the rhythm of the original. NB - This won't have an effect if it's larger than window_size.
      default: 0.0
      constraints: |-
        must be a value greater than or equal to 0
        May be changed whilst playing
        Has slide options for shaping changes
    compress:
      help: |-
        Enable the compressor. This sits at the end of the internal FX chain immediately before the `amp:` opt. Therefore to drive the compressor use the `pre_amp:` opt which will amplify the signal before it hits any internal FX. The compressor compresses the dynamic range of the incoming signal. Equivalent to automatically turning the amp down when the signal gets too loud and then back up again when it's quiet. Useful for ensuring the containing signal doesn't overwhelm other aspects of the sound. Also a general purpose hard-knee dynamic range processor which can be tuned via the opts to both expand and compress the signal.
      default: 0
      constraints: |-
        must be one of the following values: [0, 1]
        May be changed whilst playing
    threshold:
      help: |-
        Threshold value determining the break point between slope_below and slope_above. Only valid if the compressor is enabled by turning on the compress: opt.
      default: 0.2
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    clamp_time:
      help: |-
        Time taken for the amplitude adjustments to kick in fully (in seconds). This is usually pretty small (not much more than 10 milliseconds). Also known as the time of the attack phase. Only valid if the compressor is enabled by turning on the compress: opt.
      default: 0.01
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    slope_above:
      help: |-
        Slope of the amplitude curve above the threshold. A value of 1 means that the output of signals with amplitude above the threshold will be unaffected. Greater values will magnify and smaller values will attenuate the signal. Only valid if the compressor is enabled by turning on the compress: opt.
      default: 0.5
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    slope_below:
      help: |-
        Slope of the amplitude curve below the threshold. A value of 1 means that the output of signals with amplitude below the threshold will be unaffected. Greater values will magnify and smaller values will attenuate the signal. Only valid if the compressor is enabled by turning on the compress: opt.
      default: 1
      constraints: |-
        none
        May be changed whilst playing
        Has slide options for shaping changes
    relax_time:
      help: |-
        Time taken for the amplitude adjustments to be released. Usually a little longer than clamp_time. If both times are too short, you can get some (possibly unwanted) artefacts. Also known as the time of the release phase. Only valid if the compressor is enabled by turning on the compress: opt.
      default: 0.01
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
blade:
  help: |-
    Straight from the 70s, evoking the mists of Blade Runner, this simple electro-style string synth is based on filtered saw waves and a variable vibrato.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 100
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    vibrato_rate:
      help: |-
        Number of wobbles per second. For realism this should be between 6 and 8, maybe even faster for really high notes.
      default: 6
      constraints: |-
        must be a value greater than or equal to 0.0,must be a value less than or equal to 20.0
        May be changed whilst playing
        Has slide options for shaping changes
    vibrato_depth:
      help: |-
        Amount of variation around the central note. 1 is the sensible maximum (but you can go up to 5 if you want a special effect), 0 would mean no vibrato. Works well around 0.15 but you can experiment.
      default: 0.15
      constraints: |-
        must be a value greater than or equal to 0.0,must be a value less than or equal to 5.0
        May be changed whilst playing
        Has slide options for shaping changes
    vibrato_delay:
      help: |-
        How long in seconds before the vibrato kicks in.
      default: 0.5
      constraints: |-
        must be zero or greater
        Can not be changed once set
    vibrato_onset:
      help: |-
        How long in seconds before the vibrato reaches full power.
      default: 0.1
      constraints: |-
        must be zero or greater
        Can not be changed once set
piano:
  help: |-
    A basic piano synthesiser. Note that due to the plucked nature of this synth the envelope opts such as `attack:`, `sustain:` and `release:` do not work as expected. They can only shorten the natural length of the note, not prolong it.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, 56.5, `:C`, `:C2`, `:Eb4`, or `:Ds3`.
      default: 52
      constraints: |-
        must be zero or greater,must be a value less than 231
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    vel:
      help: |-
        Velocity of keypress. 
      default: 0.8
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. With the piano synth, this opt can only have the effect of shortening the attack phase, not prolonging it.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level). With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    hard:
      help: |-
        Hardness of keypress. 
      default: 0.5
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    stereo_width:
      help: |-
        Width of the stereo effect (which makes low notes sound towards the left, high notes towards the right). 0 to 1.
      default: 0
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
pluck:
  help: |-
    A basic plucked string synthesiser that uses Karplus-Strong synthesis. Note that due to the plucked nature of this synth the envelope opts such as `attack:`, `sustain:` and `release:` do not work as expected. They can only shorten the natural length of the note, not prolong it. Also, the `note:` opt will only honour whole tones.
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`. Note that the piano synth can only play whole tones such as 60 and does not handle floats such as 60.3
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level). With the piano synth, this opt can only have the effect of controlling the amp within the natural duration of the note and can not prolong the sound.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    noise_amp:
      help: |-
        Amplitude of source (pink) noise.
      default: 0.8
      constraints: |-
        must be a value between 0 and 1 inclusively
        Can not be changed once set
    max_delay_time:
      help: |-
        Maximum length of the delay line buffer.
      default: 0.125
      constraints: |-
        must be a value between 0.125 and 1 inclusively
        Can not be changed once set
    pluck_decay:
      help: |-
        How long the pluck takes to stabilise on a note. This doesn't have a dramatic effect on the sound.
      default: 30
      constraints: |-
        must be a value between 1 and 100 inclusively
        Can not be changed once set
    coef:
      help: |-
        Coefficient of the internal OnePole filter. Values around zero are resonant and bright, values towards 1 sound more dampened and cutoff. It's a little bit like playing nearer the soundhole/fingerboard for values near zero and more toward the bridge for values approaching one, although this isn't an exact comparison.
      default: 0.3
      constraints: |-
        must be a value between -1 and 1 inclusively
        Can not be changed once set
tech_saws:
  help: |-
    Slightly modified supersaw implementation based on http://sccode.org/1-4YS
  params:
    note:
      help: |-
        Note to play. Either a MIDI number or a symbol representing a note.
      examples: |-
        `30`, `52`, `:C`, `:C2`, `:Eb4`, or `:Ds3`
      default: 52
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 130
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0.7
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
sound_in:
  help: |-
    Treat sound card input as a synth. If your audio card has inputs, you may use this synth to feed the incoming audio into Sonic Pi. This synth will read in a single mono audio stream - for example from a standard microphone or guitar. See `:sound_in_stereo` for a similar synth capable of reading in a stereo signal.
    As with all Sonic Pi synths, there is a default envelope which determines the duration of the lifetime of the synth. Therefore, to get a continuous stream of audio, you need to place consecutive calls to this synth in iteration or a `live_loop`.
  examples: |-
    Please write documentation!
    ```
    live_loop :playback do
    ```
    ```
    synth :sound_in, sustain: 8
    ```
    ```
    sleep 8
    ```
    ```
    end
    ```
    Note that if the microphone and speaker are close together (on a laptop or in a small room) you will potentially get a harsh feedback sound.
    Also, note that audio in isn't yet supported on Raspberry Pi.
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 0
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    input:
      help: |-
        Sound card input channel to obtain audio from. Indexing starts at 1 so input 1 represents the first channel, and channel 2 can be represented by `input: 2`
      default: 1
      constraints: |-
        must be a value greater than or equal to 1
        May be changed whilst playing
sound_in_stereo:
  help: |-
    Treat sound card input as a synth. If your audio card has inputs, you may use this synth to feed the incoming audio into Sonic Pi. This synth will read in a stereo audio stream - for example from a stereo microphone or external stereo keyboard. See `:sound_in` for a similar synth capable of reading in a mono signal. The stereo input is expected to be on consecutive sound card channels.
    As with all Sonic Pi synths, there is a default envelope which determines the duration of the lifetime of the synth. Therefore, to get a continuous stream of audio, you need to place consecutive calls to this synth in iteration or a `live_loop`.
  examples: |-
    Please write documentation!
    ```
    live_loop :playback do
    ```
    ```
    synth :sound_in_stereo, sustain: 8
    ```
    ```
    sleep 8
    ```
    ```
    end
    ```
    Note that if the microphone and speaker are close together (on a laptop or in a small room) you will potentially get a harsh feedback sound.
    Also, note that audio in isn't yet supported on Raspberry Pi.
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 0
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    input:
      help: |-
        First of two consecutive sound card input channels to obtain audio from. Indexing starts at 1 so input 1 represents the first channel, and channel 2 can be represented by `input: 2`
      default: 1
      constraints: |-
        must be a value greater than or equal to 1
        May be changed whilst playing
noise:
  help: |-
    Noise that contains equal amounts of energy at every frequency - comparable to radio static. Useful for generating percussive sounds such as snares and hand claps. Also useful for simulating wind or sea effects.
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 110
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
pnoise:
  help: |-
    Noise whose spectrum falls off in power by 3 dB per octave. Useful for generating percussive sounds such as snares and hand claps. Also useful for simulating wind or sea effects.
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 110
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
bnoise:
  help: |-
    Noise whose spectrum falls off in power by 6 dB per octave. Useful for generating percussive sounds such as snares and hand claps. Also useful for simulating wind or sea effects.
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 110
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
gnoise:
  help: |-
    Generates noise which results from flipping random bits in a word. The spectrum is emphasised towards lower frequencies. Useful for generating percussive sounds such as snares and hand claps. Also useful for simulating wind or sea effects.
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 110
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
cnoise:
  help: |-
    Generates noise whose values are either -1 or 1. This produces the maximum energy for the least peak to peak amplitude. Useful for generating percussive sounds such as snares and hand claps. Also useful for simulating wind or sea effects.
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 2
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    cutoff:
      help: |-
        MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: 110
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    res:
      help: |-
        Filter resonance as a value between 0 and 1. Large amounts of resonance (a res: near 1) can create a whistling sound around the cutoff frequency. Smaller values produce less resonance.
      default: 0
      constraints: |-
        must be zero or greater,must be a value less than 1
        May be changed whilst playing
        Has slide options for shaping changes
chipnoise:
  help: |-
    Generates noise whose values are either -1 or 1 (like a pulse or square wave) with one of 16 particular frequencies. This is similar to the noise channel on the 2A03 chip used in the NES games console, although it lacks the same Pseudo-Random Number Generator (PRNG) and doesn't implement the 2A03's lesser used noise mode. The amplitude envelope defaults to moving by step to keep that 16 bit feel and this synth also has a slight soft clipping to better imitate the original sound of the device. Use for retro effects, hand claps, snare drums and hi-hats.
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    attack:
      help: |-
        Amount of time (in beats) for sound to reach full amplitude (attack_level). A short attack (i.e. 0.01) makes the initial part of the sound very percussive like a sharp tap. A longer attack (i.e 1) fades the sound in gently. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    decay:
      help: |-
        Amount of time (in beats) for the sound to move from full amplitude (attack_level) to the sustain amplitude (sustain_level).
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    sustain:
      help: |-
        Amount of time (in beats) for sound to remain at sustain level amplitude. Longer sustain values result in longer sounds. Full length of sound is attack + decay + sustain + release.
      default: 0
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    release:
      help: |-
        Amount of time (in beats) for sound to move from sustain level amplitude to silent. A short release (i.e. 0.01) makes the final part of the sound very percussive (potentially resulting in a click). A longer release (i.e 1) fades the sound out gently. Full length of sound is attack + decay + sustain + release.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
        Scaled with current BPM value
    attack_level:
      help: |-
        Amplitude level reached after attack phase and immediately before decay phase
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    decay_level:
      help: |-
        Amplitude level reached after decay phase and immediately before sustain phase. Defaults to sustain_level unless explicitly set
      default: sustain_level
      constraints: |-
        must be zero or greater
        Can not be changed once set
    sustain_level:
      help: |-
        Amplitude level reached after decay phase and immediately before release phase.
      default: 1
      constraints: |-
        must be zero or greater
        Can not be changed once set
    env_curve:
      help: |-
        Select the shape of the curve between levels in the envelope. 1=linear, 2=exponential, 3=sine, 4=welch, 6=squared, 7=cubed
      default: 0
      constraints: |-
        must be one of the following values: [1, 2, 3, 4, 6, 7]
        Can not be changed once set
    freq_band:
      help: |-
        Which of the 16 frequency bands to use, from 0 to 15. These range from 220Hz to 225kHz as on the original chip. This arg will accept floats but round to the nearest integer to allow for sweeping through the 16 set points with envelopes.
      default: 0
      constraints: |-
        must be a value between 0 and 15 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
basic_mono_player:
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    rate:
      default: 1
      constraints: |-
        must not be zero
        Can not be changed once set
    lpf:
      help: |-
        Low pass filter cutoff value. A MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: -1
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    hpf:
      help: |-
        High pass filter cutoff value. A MIDI note representing the lowest frequencies allowed to be present in the sound. A high value like 100 makes the sound thin and whispy, a low value like 40 removes just the lower bass components of the sound.
      default: -1
      constraints: |-
        must be zero or greater,must be a value less than 119
        May be changed whilst playing
        Has slide options for shaping changes
basic_stereo_player:
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
    pan:
      help: |-
        Position of sound in stereo. With headphones on, this means how much of the sound is in the left ear, and how much is in the right ear. With a value of -1, the sound is completely in the left ear, a value of 0 puts the sound equally in both ears and a value of 1 puts the sound in the right ear. Values in between -1 and 1 move the sound accordingly.
      default: 0
      constraints: |-
        must be a value between -1 and 1 inclusively
        May be changed whilst playing
        Has slide options for shaping changes
    rate:
      default: 1
      constraints: |-
        must not be zero
        Can not be changed once set
    lpf:
      help: |-
        Low pass filter cutoff value. A MIDI note representing the highest frequencies allowed to be present in the sound. A low value like 30 makes the sound round and dull, a high value like 100 makes the sound buzzy and crispy.
      default: -1
      constraints: |-
        must be zero or greater,must be a value less than 131
        May be changed whilst playing
        Has slide options for shaping changes
    hpf:
      help: |-
        High pass filter cutoff value. A MIDI note representing the lowest frequencies allowed to be present in the sound. A high value like 100 makes the sound thin and whispy, a low value like 40 removes just the lower bass components of the sound.
      default: -1
      constraints: |-
        must be zero or greater,must be a value less than 119
        May be changed whilst playing
        Has slide options for shaping changes
basic_mixer:
  help: |-
    Please write documentation!
  params:
    amp:
      help: |-
        The amplitude of the sound. Typically a value between 0 and 1. Higher amplitudes may be used, but won't make the sound louder, they will just reduce the quality of all the sounds currently being played (due to compression.)
      default: 1
      constraints: |-
        must be zero or greater
        May be changed whilst playing
        Has slide options for shaping changes
main_mixer:
  help: |-
    Please write documentation!
  params:
    amp:
      default: 1
      constraints: |-
        none
        Can not be changed once set
        Has slide options for shaping changes
    pre_amp:
      default: 1
      constraints: |-
        none
        Can not be changed once set
        Has slide options for shaping changes
    hpf:
      default: 0
      constraints: |-
        none
        Can not be changed once set
        Has slide options for shaping changes
    lpf:
      default: 135.5
      constraints: |-
        none
        Can not be changed once set
        Has slide options for shaping changes
    hpf_bypass:
      default: 0
      constraints: |-
        none
        Can not be changed once set
    lpf_bypass:
      default: 0
      constraints: |-
        none
        Can not be changed once set
    force_mono:
      default: 0
      constraints: |-
        none
        Can not be changed once set
    invert_stereo:
      default: 0
      constraints: |-
        none
        Can not be changed once set
    limiter_bypass:
      default: 0
      constraints: |-
        none
        Can not be changed once set
    leak_dc_bypass:
      default: 0
      constraints: |-
        none
        Can not be changed once set
